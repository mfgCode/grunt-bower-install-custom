// Generated by CoffeeScript 1.6.3
"use strict";
module.exports = function(grunt) {
  var add, files, fs, generateCode, path, replaceBower, util;
  fs = require("fs");
  path = require("path");
  util = require("util");
  files = {
    js: [],
    css: []
  };
  add = function(file) {
    if (path.extname(file) === '.css') {
      files.css.push(file);
    }
    if (path.extname(file) === '.js') {
      return files.js.push(file);
    }
  };
  generateCode = function() {
    var css, file, js, _i, _j, _len, _len1, _ref, _ref1;
    js = "";
    css = "";
    _ref = files.js;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      file = _ref[_i];
      js += "<script src=\"" + file + "\"></script>\n";
    }
    _ref1 = files.css;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      file = _ref1[_j];
      css += "<link rel=\"stylesheet\" href=\"" + file + "\" />\n";
    }
    return {
      js: js,
      css: css
    };
  };
  replaceBower = function(html, code) {
    if (code.css.length > 0) {
      html = html.replace(/<\/head>/, code.css + "\n</head>");
    }
    if (code.js.length > 0) {
      html = html.replace(/<\/head>/, code.js + "\n</head>");
    }
    return html;
  };
  return grunt.registerMultiTask("bower-install-custom", "Install Bower packages packages that were not configured correctly.", function() {
    var config, htmlContent, options, replacedCode;
    file.js = [];
    file.css = [];
    options = this.options({
      config: 'bower-install-custom.json'
    });
    if (options.html) {
      grunt.log.ok("Found html file " + options.html.grey);
    }
    if (fs.existsSync(options.html)) {
      grunt.log.ok("HTML file exists, loading ...");
      htmlContent = fs.readFileSync(options.html, {
        encoding: 'utf8'
      });
    }
    if (fs.existsSync(options.config)) {
      grunt.log.ok("Found config file " + options.config.grey);
      config = JSON.parse(fs.readFileSync(options.config));
      console.log(config);
      config.modules.forEach(function(module) {
        grunt.log.ok('Module `' + module[0] + '` with files: ' + module[1]);
        return module[1].forEach(function(file) {
          if (htmlContent.indexOf(file) >= 0) {
            return grunt.log.error('bower-install has already installed `' + file.grey + '` for module `' + module[0] + '`');
          } else {
            grunt.log.ok('bower-install missed `' + file.grey + '` for module `' + module[0] + '`');
            return add(config.localpath + "/" + module[0] + "/" + file);
          }
        });
      });
      replacedCode = replaceBower(htmlContent, generateCode());
      return fs.writeFileSync(options.html, replacedCode);
    }
  });
};
